Start with the file ./data/hexagonal_lattice_d2.dat
Tried aggregator 1 time.
MIP Presolve eliminated 25 rows and 1 columns.
Reduced MIP has 180 rows, 103 columns, and 516 nonzeros.
Reduced MIP has 78 binaries, 25 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 2 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.00 sec.
Probing time =    0.00 sec.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time =    0.00 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        2.0000    78                      2.0000       78         
      0     0        2.0000    72                    Cuts: 70      145         
      0     0        2.0000    67                    Cuts: 47      184         
      0     0        2.0000    87                    Cuts: 43      225         
      0     0        2.0000    60                    Cuts: 25      249         
      0     0        2.0000    50                    Cuts: 53      294         
      0     0        2.0000    67                    Cuts: 38      323         
*     0+    0                            7.0000        2.0000      323   71.43%
*     0+    0                            6.0000        2.0000      323   66.67%
      0     2        2.0000    67        6.0000        2.0000      323   66.67%
Elapsed time =   0.06 sec. (tree size =  0.01 MB, solutions = 2)
*   255+  142                            5.0000        2.0208     2208   59.58%

Implied bound cuts applied:  28
Flow cuts applied:  11
Mixed integer rounding cuts applied:  24
Zero-half cuts applied:  19
Gomory fractional cuts applied:  2

Root node processing (before b&c):
  Real time             =    0.06
Parallel b&c, 4 threads:
  Real time             =    0.10
  Sync time (average)   =    0.00
  Wait time (average)   =    0.00
                          -------
Total (root+branch&cut) =    0.16 sec.
Solution status = Optimal
Solution time with cplex.getCplexTime()  = 0.16
Solution value  = 5
c(0)=2 c(1)=3 c(2)=5 c(3)=0 c(4)=1 c(5)=3 c(6)=4 c(7)=5 c(8)=0 c(9)=1 c(10)=2 c(11)=0 c(12)=4 c(13)=5 c(14)=0 c(15)=3 c(16)=2 c(17)=3 c(18)=5 c(19)=0 c(20)=1 c(21)=2 c(22)=5 c(23)=4 
