Start with the file ../data/square_lattice_d2.dat

Graph (V,E) with |V|= 30
Distance matrix: 
0  1  2  3  4  1  2  3  4  5  2  3  4  5  6  3  4  5  6  7  4  5  6  7  8  5  6  7  8  9  
1  0  1  2  3  2  1  2  3  4  3  2  3  4  5  4  3  4  5  6  5  4  5  6  7  6  5  6  7  8  
2  1  0  1  2  3  2  1  2  3  4  3  2  3  4  5  4  3  4  5  6  5  4  5  6  7  6  5  6  7  
3  2  1  0  1  4  3  2  1  2  5  4  3  2  3  6  5  4  3  4  7  6  5  4  5  8  7  6  5  6  
4  3  2  1  0  5  4  3  2  1  6  5  4  3  2  7  6  5  4  3  8  7  6  5  4  9  8  7  6  5  
1  2  3  4  5  0  1  2  3  4  1  2  3  2  5  2  3  4  5  6  3  4  5  6  5  4  5  6  7  8  
2  1  2  3  4  1  0  1  2  3  2  1  2  3  4  3  2  3  4  5  4  3  4  5  6  5  4  5  6  7  
3  2  1  2  3  2  1  0  1  2  3  2  1  2  3  4  3  2  3  4  5  4  3  4  5  6  5  4  5  6  
4  3  2  1  2  3  2  1  0  1  4  3  2  1  2  5  4  3  2  3  6  5  4  3  4  7  6  5  4  5  
5  4  3  2  1  4  3  2  1  0  5  4  3  2  1  6  5  4  3  2  7  6  5  4  3  8  7  6  5  4  
2  3  4  5  6  1  2  3  4  5  0  1  2  3  4  1  2  3  4  5  2  3  4  5  4  3  4  5  6  7  
3  2  3  4  5  2  1  2  3  4  1  0  1  2  3  2  1  2  3  4  3  2  3  4  5  4  3  4  5  6  
4  3  2  3  4  3  2  1  2  3  2  1  0  1  2  3  2  1  2  3  4  3  2  3  4  5  4  3  4  5  
5  4  3  2  3  2  3  2  1  2  3  2  1  0  1  4  3  2  1  2  5  4  3  2  3  6  5  4  3  4  
6  5  4  3  2  5  4  3  2  1  4  3  2  1  0  5  4  3  2  1  6  5  4  3  2  7  6  5  4  3  
3  4  5  6  7  2  3  4  5  6  1  2  3  4  5  0  1  2  3  4  1  2  3  4  3  2  3  4  5  6  
4  3  4  5  6  3  2  3  4  5  2  1  2  3  4  1  0  1  2  3  2  1  2  3  4  3  2  3  4  5  
5  4  3  4  5  4  3  2  3  4  3  2  1  2  3  2  1  0  1  2  3  2  1  2  3  4  3  2  3  4  
6  5  4  3  4  5  4  3  2  3  4  3  2  1  2  3  2  1  0  1  4  3  2  1  2  5  4  3  2  3  
7  6  5  4  3  6  5  4  3  2  5  4  3  2  1  4  3  2  1  0  5  4  3  2  1  6  5  4  3  2  
4  5  6  7  8  3  4  5  6  7  2  3  4  5  6  1  2  3  4  5  0  1  2  3  2  1  2  3  4  5  
5  4  5  6  7  4  3  4  5  6  3  2  3  4  5  2  1  2  3  4  1  0  1  2  3  2  1  2  3  4  
6  5  4  5  6  5  4  3  4  5  4  3  2  3  4  3  2  1  2  3  2  1  0  1  2  3  2  1  2  3  
7  6  5  4  5  6  5  4  3  4  5  4  3  2  3  4  3  2  1  2  3  2  1  0  1  4  3  2  1  2  
8  7  6  5  4  5  6  5  4  3  4  5  4  3  2  3  4  3  2  1  2  3  2  1  0  5  4  3  2  1  
5  6  7  8  9  4  5  6  7  8  3  4  5  6  7  2  3  4  5  6  1  2  3  4  5  0  1  2  3  4  
6  5  6  7  8  5  4  5  6  7  4  3  4  5  6  3  2  3  4  5  2  1  2  3  4  1  0  1  2  3  
7  6  5  6  7  6  5  4  5  6  5  4  3  4  5  4  3  2  3  4  3  2  1  2  3  2  1  0  1  2  
8  7  6  5  6  7  6  5  4  5  6  5  4  3  4  5  4  3  2  3  4  3  2  1  2  3  2  1  0  1  
9  8  7  6  5  8  7  6  5  4  7  6  5  4  3  6  5  4  3  2  5  4  3  2  1  4  3  2  1  0  
Labeling L(d_1, d_2, ..., d_s) max_d=3
3  2  
 Set Model d: 3 2 
 Set Model constraints:  Set Model finished: Tried aggregator 1 time.
MIP Presolve eliminated 31 rows and 1 columns.
Reduced MIP has 288 rows, 160 columns, and 834 nonzeros.
Reduced MIP has 129 binaries, 31 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 1 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.00 sec.
Probing time =    0.00 sec.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time =    0.00 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        3.0000   129                      3.0000      129         
      0     0        3.0000   131                   Cuts: 125      249         
      0     0        3.0000   121                    Cuts: 46      281         
      0     0        3.0000   139                    Cuts: 87      358         
      0     2        3.0000    95                      3.0000      358         
Elapsed time =   0.05 sec. (tree size =  0.01 MB, solutions = 0)
*   174+  167                           17.0000        3.0000     2007   82.35%
*   350   335      integral     0       16.0000        3.0000     3073   81.25%
*   387   355      integral     0       15.0000        3.0000     3449   80.00%
*   458+  404                           14.0000        3.0000     4221   78.57%
*   458+  404                           12.0000        3.0000     4221   75.00%
*  3041   820      integral     0       11.0000        6.0000    25496   45.45%

Implied bound cuts applied:  183
Flow cuts applied:  8
Mixed integer rounding cuts applied:  32
Zero-half cuts applied:  4
Gomory fractional cuts applied:  17

Root node processing (before b&c):
  Real time             =    0.05
Parallel b&c, 4 threads:
  Real time             =    1.25
  Sync time (average)   =    0.00
  Wait time (average)   =    0.00
                          -------
Total (root+branch&cut) =    1.30 sec.
Solution status = Optimal
Solution time with cplex.getCplexTime()  = 1.3
Solution value  = 11
c(0)=11 c(1)=2 c(2)=8 c(3)=0 c(4)=5 c(5)=0 c(6)=5 c(7)=11 c(8)=3 c(9)=8 c(10)=3 c(11)=8 c(12)=0 c(13)=6 c(14)=11 c(15)=6 c(16)=11 c(17)=4 c(18)=9 c(19)=2 c(20)=9 c(21)=2 c(22)=7 c(23)=0 c(24)=5 c(25)=0 c(26)=5 c(27)=11 c(28)=3 c(29)=8 
1.31user 0.05system 0:02.91elapsed 46%CPU (0avgtext+0avgdata 39768maxresident)k
41560inputs+10984outputs (2major+10190minor)pagefaults 0swaps
