Start with the file ../data/hexagonal_lattice_d2.dat

Graph (V,E) with |V|= 30
Distance matrix: 
0  2  4  1  1  3  5  2  2  4  6  3  3  3  5  4  4  4  6  5  5  5  7  6  6  6  8  7  7  9  
2  0  2  3  1  1  3  4  2  2  4  5  3  3  3  6  4  4  4  5  5  5  5  6  6  6  6  7  7  7  
4  2  0  5  3  1  1  6  4  2  2  7  5  3  3  8  6  4  4  7  5  5  5  8  6  6  6  7  7  7  
1  3  5  0  2  4  6  1  3  5  7  2  2  4  6  3  3  5  7  4  4  6  8  5  5  7  9  6  6  8  
1  1  3  2  0  2  4  3  1  3  5  4  2  2  4  5  3  3  5  4  4  4  6  5  5  5  7  6  6  6  
3  1  1  4  2  0  2  5  3  1  3  6  4  2  2  7  5  3  3  6  4  4  4  7  5  5  5  6  6  6  
5  3  1  6  4  2  0  7  5  3  1  8  6  4  2  9  7  5  3  8  6  4  4  9  7  5  5  8  6  6  
2  4  6  1  3  5  7  0  2  4  6  1  1  3  5  2  2  4  6  3  3  5  7  4  4  6  8  5  5  7  
2  2  4  3  1  3  5  2  0  2  4  3  1  1  3  4  2  2  4  3  3  3  5  4  4  4  6  5  5  5  
4  2  2  5  3  1  3  4  2  0  2  5  3  1  1  6  4  2  2  5  3  3  3  6  4  4  4  5  5  5  
6  4  2  7  5  3  1  6  4  2  0  7  5  3  1  8  6  4  2  7  5  3  3  8  6  4  4  7  5  5  
3  5  7  2  4  6  8  1  3  5  7  0  2  4  6  1  3  5  7  2  4  6  8  3  5  7  9  4  6  8  
3  3  5  2  2  4  6  1  1  3  5  2  0  2  4  3  1  3  5  2  2  4  6  3  3  5  7  4  4  6  
3  3  3  4  2  2  4  3  1  1  3  4  2  0  2  5  3  1  3  4  2  2  4  5  3  3  5  4  4  4  
5  3  3  6  4  2  2  5  3  1  1  6  4  2  0  7  5  3  1  6  4  2  2  7  5  3  3  6  4  4  
4  6  8  3  5  7  9  2  4  6  8  1  3  5  7  0  2  4  6  1  3  5  7  2  4  6  8  3  5  7  
4  4  6  3  3  5  7  2  2  4  6  3  1  3  5  2  0  2  4  1  1  3  5  2  2  4  6  3  3  5  
4  4  4  5  3  3  5  4  2  2  4  5  3  1  3  4  2  0  2  3  1  1  3  4  2  2  4  3  3  3  
6  4  4  7  5  3  3  6  4  2  2  7  5  3  1  6  4  2  0  5  3  1  1  6  4  2  2  5  3  3  
5  5  7  4  4  6  8  3  3  5  7  2  2  4  6  1  1  3  5  0  2  4  6  1  3  5  7  2  4  6  
5  5  5  4  4  4  6  3  3  3  5  4  2  2  4  3  1  1  3  2  0  2  4  3  1  3  5  2  2  4  
5  5  5  6  4  4  4  5  3  3  3  6  4  2  2  5  3  1  1  4  2  0  2  5  3  1  3  4  2  2  
7  5  5  8  6  4  4  7  5  3  3  8  6  4  2  7  5  3  1  6  4  2  0  7  5  3  1  6  4  2  
6  6  8  5  5  7  9  4  4  6  8  3  3  5  7  2  2  4  6  1  3  5  7  0  2  4  6  1  3  5  
6  6  6  5  5  5  7  4  4  4  6  5  3  3  5  4  2  2  4  3  1  3  5  2  0  2  4  1  1  3  
6  6  6  7  5  5  5  6  4  4  4  7  5  3  3  6  4  2  2  5  3  1  3  4  2  0  2  3  1  1  
8  6  6  9  7  5  5  8  6  4  4  9  7  5  3  8  6  4  2  7  5  3  1  6  4  2  0  5  3  1  
7  7  7  6  6  6  8  5  5  5  7  4  4  4  6  3  3  3  5  2  2  4  6  1  1  3  5  0  2  4  
7  7  7  6  6  6  6  5  5  5  5  6  4  4  4  5  3  3  3  4  2  2  4  3  1  1  3  2  0  2  
9  7  7  8  6  6  6  7  5  5  5  8  6  4  4  7  5  3  3  6  4  2  2  5  3  1  1  4  2  0  
Labeling L(d_1, d_2, ..., d_s) max_d=3
3  2  
 Set Model d: 3 2 
 Set Model constraints:  Set Model finished: Tried aggregator 1 time.
MIP Presolve eliminated 31 rows and 1 columns.
Reduced MIP has 230 rows, 131 columns, and 660 nonzeros.
Reduced MIP has 100 binaries, 31 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 2 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.00 sec.
Probing time =    0.00 sec.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time =    0.00 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        3.0000   100                      3.0000      100         
      0     0        3.0000   101                    Cuts: 93      201         
      0     0        3.0000    67                    Cuts: 18      218         
      0     0        3.0000   100                    Cuts: 75      307         
*     0+    0                           19.0000        3.0000      307   84.21%
      0     2        3.0000    80       19.0000        3.0000      307   84.21%
Elapsed time =   0.05 sec. (tree size =  0.01 MB, solutions = 1)
*   117+  112                           11.0000        3.0000     1658   72.73%
*   333   257      integral     0       10.0000        3.0000     3416   70.00%
*   378+  273                            9.0000        3.0000     3923   66.67%

Implied bound cuts applied:  71
Flow cuts applied:  1
Mixed integer rounding cuts applied:  89
Zero-half cuts applied:  6
Gomory fractional cuts applied:  15

Root node processing (before b&c):
  Real time             =    0.05
Parallel b&c, 4 threads:
  Real time             =    0.99
  Sync time (average)   =    0.02
  Wait time (average)   =    0.00
                          -------
Total (root+branch&cut) =    1.04 sec.
Solution status = Optimal
Solution time with cplex.getCplexTime()  = 1.04
Solution value  = 9
c(0)=0 c(1)=9 c(2)=6 c(3)=3 c(4)=6 c(5)=3 c(6)=0 c(7)=6 c(8)=3 c(9)=0 c(10)=9 c(11)=9 c(12)=0 c(13)=9 c(14)=6 c(15)=1 c(16)=9 c(17)=5 c(18)=3 c(19)=6 c(20)=2 c(21)=0 c(22)=8 c(23)=3 c(24)=7 c(25)=9 c(26)=5 c(27)=0 c(28)=4 c(29)=2 
1.04user 0.03system 0:00.96elapsed 111%CPU (0avgtext+0avgdata 38316maxresident)k
0inputs+10984outputs (0major+9774minor)pagefaults 0swaps
