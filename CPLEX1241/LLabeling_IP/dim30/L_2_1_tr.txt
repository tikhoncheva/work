Start with the file ./data/triangular_lattice_d2.dat
Tried aggregator 1 time.
MIP Presolve eliminated 31 rows and 1 columns.
Reduced MIP has 380 rows, 206 columns, and 1110 nonzeros.
Reduced MIP has 175 binaries, 31 generals, 0 SOSs, and 0 indicators.
Probing fixed 0 vars, tightened 1 bounds.
Probing time =    0.00 sec.
Tried aggregator 1 time.
Presolve time =    0.01 sec.
Probing time =    0.00 sec.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time =    0.00 sec.

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0        2.0000   175                      2.0000      175         
      0     0        2.0000   147                   Cuts: 128      290         
      0     0        2.0000   179                   Cuts: 103      384         
      0     0        2.0000   127                    Cuts: 30      414         
      0     0        2.0000   160                   Cuts: 119      505         
      0     2        2.0000   127                      2.0000      505         
Elapsed time =   0.07 sec. (tree size =  0.01 MB, solutions = 0)
*   167+  163                           17.0000        2.0000     3254   88.24%
*   236+  229                           10.0000        2.0000     3716   80.00%
   2489  1845        3.0000   110       10.0000        3.0000    24423   70.00%
*  2610+ 1165                            9.0000        3.0000    25747   66.67%
*  2903   673      integral     0        8.0000        4.0000    27859   50.00%

Implied bound cuts applied:  245
Flow cuts applied:  2
Mixed integer rounding cuts applied:  57
Zero-half cuts applied:  28
Gomory fractional cuts applied:  46

Root node processing (before b&c):
  Real time             =    0.06
Parallel b&c, 4 threads:
  Real time             =    1.64
  Sync time (average)   =    0.00
  Wait time (average)   =    0.00
                          -------
Total (root+branch&cut) =    1.70 sec.
Solution status = Optimal
Solution time with cplex.getCplexTime()  = 1.71
Solution value  = 8
c(0)=3 c(1)=7 c(2)=2 c(3)=6 c(4)=1 c(5)=1 c(6)=5 c(7)=0 c(8)=4 c(9)=8 c(10)=4 c(11)=8 c(12)=3 c(13)=7 c(14)=2 c(15)=2 c(16)=6 c(17)=1 c(18)=5 c(19)=0 c(20)=4 c(21)=0 c(22)=4 c(23)=8 c(24)=3 c(25)=3 c(26)=7 c(27)=2 c(28)=6 c(29)=1 
